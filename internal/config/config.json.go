// Code generated for package config by go-bindata DO NOT EDIT. (@generated)
// sources:
// data/config.json
package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3c\xfb\x6f\x22\x39\x93\xbf\xaf\xb4\xff\x43\x2d\xab\x11\x19\x7d\x84\x03\xf2\x98\x24\xdf\xde\x9e\x08\x21\x93\x68\x32\x09\x97\x26\xbb\x7b\xf7\xe9\x8e\x31\xdd\x05\xed\x8b\xb1\x39\xdb\xcd\x63\x47\xb9\xbf\xfd\x64\xbb\x1b\xba\x69\x5e\x61\xc4\x28\xd2\xb7\xd2\x8e\x02\x55\xc6\x55\xae\x2a\xd7\xc3\x2e\xef\xd7\x1f\x7f\x00\x28\x74\x06\xa8\x49\xe1\x02\xec\x37\x80\xc2\x08\xa5\xa2\x82\x17\x2e\xa0\x50\x2d\x57\xca\x95\x42\x29\x46\xf8\x21\xe1\x7d\x0c\x3a\xe3\x10\x2d\xb6\x56\xa9\x1d\x1f\x56\x4e\x0f\x6b\x27\x05\x33\xe2\xc5\x8e\x2b\x28\x54\xe6\xe7\xed\xe9\x10\x55\x6a\x56\xa5\xc2\xf9\x37\x80\x82\x1e\x0c\x99\xa7\x25\xe5\x7d\x33\xd5\xd7\xaf\x65\xcf\xfd\xee\x9e\x0c\xf0\xe5\xe5\x5f\xbf\x7e\x85\xf2\x9d\xe8\x8b\x48\xc3\xcb\xcb\xcf\xe6\xdb\xad\x2f\xf8\x7d\x34\xe8\xa2\x4c\x20\xde\x9c\x12\xbc\xbc\xbc\x33\xa0\x47\x1c\x08\x8d\x37\x42\xe9\x04\xd2\x12\x72\xf6\xf9\x49\xa1\xe4\x64\x60\x47\x5b\xc0\x1f\xd5\xea\xb5\x90\x63\x22\x03\xca\xfb\xc9\xa8\x86\x18\x0c\xa5\x9b\x3a\x01\x35\x27\xe8\x47\x1a\x1b\x62\x30\x20\x3c\x48\xa0\x9e\x77\xf3\xf1\x77\x43\xeb\x8e\xce\xe9\x59\xa0\x21\x9a\x03\x1a\xea\x69\xe0\x95\xb8\x17\xba\x39\xa1\xba\xde\xd3\x28\xef\x44\x9f\xf2\x05\x02\x57\x82\x6b\x6f\x88\x3e\xed\x4d\xd3\xac\xcf\x17\xda\xe4\x23\x2a\x05\x1f\x20\x9f\xaf\x57\xd2\x11\xd1\xf8\x09\xa7\x2d\xa2\xc3\x2c\x57\x33\xd4\x02\x6f\x97\x52\x8c\x15\xca\xb4\x20\xaf\x05\x63\x62\xec\x79\x37\xc9\x2c\x95\x78\x76\x31\x99\xa6\xc7\x59\x40\x46\xde\x06\x90\x16\xba\x05\xd8\xd5\x25\x90\x7a\x40\x86\xfa\x4e\xf8\x84\xa1\x9a\xd1\xa3\x0c\x63\x36\xbc\x46\xeb\x61\x84\xd2\xbb\x6e\xb7\x96\x60\x5b\x52\x68\xe1\x0b\x96\xa0\xec\x3c\x96\x46\x5e\x3b\xc9\xd8\xdf\x9c\x45\x27\x98\x4f\x38\x6d\x4e\x9c\x31\xd7\x59\x5f\xcc\x78\x30\xcb\xf8\x84\x76\x79\x33\x58\x83\x0e\x43\x94\xb3\xaf\x57\x54\xf9\x82\x73\xf4\xf5\x6d\xaf\x1e\xe9\xd0\x8b\x7c\x1f\x31\x50\x6d\x49\x47\x94\x30\x36\x9d\xaf\x1a\x7b\x28\xe3\x19\x0d\x15\x49\x75\x38\x98\xcd\x53\xd7\x1a\x07\x43\x6d\xa6\x78\x52\x94\xf7\x3d\xef\xa6\xde\x4f\x69\xb1\x6e\xa4\x6f\x21\x19\xfb\xb4\x66\xdf\x46\x39\xa0\x9c\xb0\x6b\x31\x1f\x6f\x3e\x7b\xf4\xcf\x99\x5a\xd2\x63\x2e\x05\x0b\x66\x16\x5f\x1f\x0e\x91\x07\xbf\x53\x1e\x88\xb1\x4a\x5b\x48\xf2\x8b\x46\x48\xa4\xc2\xd4\xc4\x12\xfb\x52\x44\x73\xb9\x5e\x12\xff\x39\x0b\x69\x44\x52\x09\xd9\x10\x4c\xc8\x2c\x28\x6d\x28\xe6\x67\x6a\x48\x7c\xf4\x90\x07\xaa\xa1\x25\xbb\x99\xab\xb0\xff\x10\xe9\x61\xa4\x53\x80\x6b\xc1\x02\x94\xcb\x18\x4c\x4f\x7a\x27\xfc\xe7\x19\x9c\x6a\x36\xdf\xd9\x96\x1b\xcf\x0f\x71\x90\x93\xc9\xa3\x18\xab\xdc\xaa\x05\x8b\x06\x5c\xa5\x56\xed\xe3\x35\x9d\x60\x60\x06\x37\x04\x9b\x61\xbc\x29\xd7\x64\x72\x43\xfb\x21\xa3\xfd\x50\xa7\xdc\x86\x17\x8a\xb1\x11\xb5\x11\x79\x5d\x5d\x4a\x83\xc6\x94\x40\x94\x16\x83\xcf\xc4\x97\x22\xbd\x80\x34\x18\x27\xf3\x3d\x43\x94\xc6\x2b\x64\x64\x9a\x56\x70\x4e\x35\x5c\xd7\xb9\xa6\x84\x51\xa2\x52\x8c\x18\xf8\x1d\xed\x13\x1d\x49\x6b\xc7\xce\x57\x6a\x22\x75\xec\x30\x6f\x79\x02\x35\x5b\x06\xb9\x9e\x8d\x72\xec\xb4\x49\x37\x51\x66\xe2\xfb\x01\x0a\xc4\x98\x24\x06\x1d\x31\xd4\x54\x70\xe3\xda\xff\xf1\x5f\x0e\xf9\x92\xf2\xfe\x73\x6c\xe2\xf8\x9d\x17\xcf\xf8\xfe\x00\x7b\x24\x62\xba\x33\x22\x2c\x42\xe3\xfe\xb5\x8c\x30\x45\x4a\xa1\xaf\xe3\x08\x74\x29\xc4\xf3\x80\xc8\x67\x50\xa8\x8d\xb4\x55\x6a\x58\x88\x6c\x68\xc6\x5c\xa1\xb6\x6a\x44\x05\xe3\x10\x75\x88\x12\xb4\x80\x80\xaa\xa1\x11\x20\x01\x89\xf1\x9e\x35\x3e\x60\x80\x4a\x91\x3e\x9a\x91\x1c\x98\xe8\xf7\x8d\xe4\x44\xa4\xcb\xa9\x89\x73\x8b\xb0\xd0\x1e\x61\xca\x72\xfb\x77\x30\x3f\x34\x8b\x2a\xa5\xd0\x76\x0d\x17\x50\x80\x42\x02\x7c\x89\xc5\x93\xc4\xcf\x79\x04\x5b\x2f\x8d\x6a\xe5\x7c\xb9\x30\x3e\x22\x47\x49\xd8\x12\x11\xb4\x43\x04\xea\x0b\x0e\xdc\x45\x48\xd1\x03\x1d\x22\xc4\xb1\xb8\x0c\x06\x1f\xd3\x81\x9e\x90\xe0\x79\x37\x40\x15\x54\x2b\xe7\xe5\xc2\x02\x97\xa9\xa8\xba\x9e\xcd\xca\x6b\x99\xbc\xe5\x01\xf5\x89\x46\x95\xe6\x0d\xf4\x74\x88\x65\xb8\x8e\x99\x9a\x6b\x4a\x95\x80\xea\xa2\x02\xc2\xc6\x64\xaa\xa0\x58\x29\x6e\x56\x91\x4b\x32\x0a\x95\x95\x2a\x98\xe7\x07\xeb\xd7\x96\xa2\x24\xf1\x7f\x23\x2a\x31\x28\x5c\x80\x51\xf1\x72\x2b\x25\x8a\xfa\x96\xff\x35\x66\x6a\x74\x10\x0a\xa5\x6d\x18\x17\x12\x6e\x5b\x40\x82\xc0\x64\x1a\x89\xba\xa4\xe5\x2e\x9e\x47\x8e\x50\x1a\xc5\x51\x05\x3d\x8a\x2c\x00\x9f\x70\x2e\x34\x74\x11\x4c\xe8\x98\xe6\x14\x67\x82\xee\xfa\x55\xd5\x6a\x2b\x36\xd9\xb6\xec\x0f\x4d\x5c\x8f\x4d\xcc\x98\x91\x61\x3a\xab\xb5\xac\xa9\x19\x9c\xfd\x0d\x55\x50\xab\xe5\x38\x4e\x92\x9a\xad\x75\xb1\x0b\xcf\x51\x92\x39\xad\x60\x78\x91\xa9\x4c\x4e\xb8\x9e\xb3\x26\x27\x5d\xb6\xc2\x71\xd5\x83\x11\xe1\x3e\x06\x9b\x58\x74\x73\xc0\x1f\xd5\xaa\x61\x30\x26\xbb\xd9\xd2\x63\xd2\x17\x50\x38\xac\x66\xdc\xd0\x15\x55\x09\xa6\xb2\xd4\x3f\x2d\x8c\x9f\x79\xb5\xd5\x9b\x26\x95\x10\x7f\x37\x79\xf8\x73\x9a\x6f\x4b\x18\xd9\x52\x60\x17\xcb\xdd\x56\x12\x49\x3e\xab\x05\xa0\x23\x0a\xd1\x50\xd8\xa0\x45\x79\x19\x8a\x7f\x2f\x02\xe5\xd6\xa2\xb5\x49\x1d\x9c\x93\xa0\x0a\x24\x0e\x19\x31\xf3\x8f\xa9\x0e\xa1\xd8\xe9\xb4\xda\xbf\xdd\x3e\x7e\xec\x74\x66\xe3\x63\xa2\x79\xd7\x9f\x2e\x68\x76\x59\xda\x3d\xea\xb1\x58\x1f\xac\x6d\xe9\x21\x7a\x76\xf1\x7d\xa2\x71\x4c\xa6\xd6\x2b\xaa\x32\x7c\x8e\x98\xa6\x43\x36\xf7\x92\x0a\x88\x34\xdc\x0e\x89\x24\x1a\x03\xe8\x4e\xed\x72\x6e\x5b\xcd\x4e\xa7\xb8\x9c\xfb\xa4\xf2\xfa\x8e\xdc\x1b\x07\x97\xe6\xde\x7e\x7f\x3d\xe7\x49\x79\xf8\x1d\x39\x4f\x5c\x63\x9a\xfb\x19\xec\x55\x2b\x58\x5d\xcb\xae\x5f\x8e\xdb\x70\xdf\xb4\x4d\x96\x67\x7f\x38\xa1\x1a\x88\x61\xc6\x5a\xbc\xdd\x33\xc6\xa9\xd8\x1d\x65\x2a\x90\xb7\xe5\x55\x96\x54\xfa\x3b\x0b\x6e\x9b\x04\x2c\x25\x29\xe5\xc8\x02\x99\xa9\xbe\x0c\xc5\xc3\x6a\xd1\x4a\xd1\x8a\xa0\x64\x92\x2f\xa0\x3d\x20\xf1\x60\xea\xcf\xa3\x2a\x55\xe6\x73\xf0\xb6\xc4\x99\x3b\x1d\x59\x2f\xcc\x5b\xae\x51\x12\x5f\xd3\x11\x82\x17\x22\x63\xdf\x66\x91\x4e\x91\x34\xce\x73\xe3\xa4\x0e\xe7\xcc\x94\xe1\xe0\x5e\x68\x98\xa2\x71\xda\x9c\xaa\x10\x83\xf7\x1b\xc5\x97\xe7\x31\x27\xaf\xbb\x3f\xae\x9a\xb6\x7e\x58\x29\x97\xec\xe1\xd0\x3e\x83\x97\xad\xdc\xb5\xb0\x12\x18\x3a\xaa\xf0\x8c\x53\xe8\x51\x86\x2b\x3c\x77\xe6\x74\x6a\xcf\x5e\x30\xc5\x92\x9a\x15\x44\xb1\x5b\x4c\x7b\x43\x8b\x7f\xa5\x2b\x4f\x9d\xa6\xed\x5a\xf5\xbe\x32\x59\x32\xa3\xae\x29\xc3\xc3\xae\x23\xfd\xb6\x36\x63\xe6\x28\x71\xef\xe1\xc0\x51\x73\x95\x87\xb1\xc1\x38\xe5\x31\x76\x07\x6f\x52\x3c\xb3\x23\xd5\xf5\xa2\xb9\x17\x7c\x85\x64\xb6\x30\x7b\x7b\xe4\x64\xcd\x5e\x4c\xa6\x9b\x97\x6f\x69\xe5\x96\xe8\x09\xff\x59\x1d\x3b\x07\x93\x83\x9f\xd8\xfa\x32\x03\xbf\xd1\xda\x12\x3f\xca\x40\xdb\xc8\x38\x9a\xed\x5d\x38\xce\x3a\x2f\xe1\x13\xeb\xd3\x4e\xd6\x4b\xea\x55\xb5\xfb\xeb\xa4\x74\xb3\xb6\x38\xb7\xb2\x4b\xea\xf2\x5c\xed\x9d\x9c\x7a\x6f\x3a\xd9\x39\x5b\x71\x6a\xb2\x05\x7b\xad\x54\xf1\xbd\x35\x4f\x36\x15\xdb\x97\x33\xb5\x49\x55\xae\xbe\x5e\xcb\x54\xfa\xec\x7f\x67\x5f\xd0\x9c\x0c\x51\xea\x8d\x61\x18\x79\x00\xcc\x90\x02\x46\x78\x3f\x22\xfd\x59\xe5\xa3\x92\xd0\x94\x70\xf9\x96\x1c\xc2\xf2\xab\x90\xf5\xc2\xf2\xbc\x9b\x7f\x59\xed\x21\xb6\xf5\x9d\x4f\x0a\xc1\x6b\xb4\x40\x8c\x50\x82\xbd\x7f\x31\x3a\x9d\xbb\x4e\x53\x33\xba\xdc\xd0\x86\xcc\x46\xcb\x65\x86\x49\xfc\x14\x12\x0c\x0f\x65\x80\x9f\xdb\x0f\x57\x0f\x17\xd0\xa8\xdf\x35\x36\x8a\xd6\x6b\xb4\x96\xc8\x69\xb6\xa0\x6d\x45\x95\xdc\xf5\xac\x97\x53\xac\xae\xe0\x1b\x93\x9b\xe4\x0e\x2a\x2f\x9e\xed\x4f\x91\x2b\xcb\xec\x28\x58\xe2\x76\x9d\xf2\x17\x9d\x6e\xa3\x05\xde\x10\xdd\x0f\x6a\x39\xd4\xbd\x90\x03\xe7\x4e\x8f\x56\x0a\x2f\x77\x73\xb6\x27\x37\x91\x9c\x63\x18\x61\xb9\xed\xe8\xc2\x10\x3c\xa2\x2f\xfa\x9c\xfe\x89\x0a\xa8\xc9\x6e\x39\x61\x30\x22\x92\x1a\x41\x28\x78\x17\x0a\xa5\x4b\xf0\xce\x94\xd3\x25\x78\x67\xdc\x8c\xf9\x46\x94\x2a\x43\xf1\x5d\x11\x54\x28\x22\x16\x40\x17\x97\x1c\x78\x34\x1f\x1b\xcd\xfb\xb6\xc9\xcf\xc0\xd8\xf4\xbb\x77\x70\x90\x82\xa6\x3e\xbe\x37\x8e\x20\x32\x43\x96\x65\x72\x0b\xf7\x87\xeb\xe5\x53\x8f\xb4\xf8\x26\x77\x65\x32\x96\xc4\xb0\xe2\x3b\xf8\xcd\xe6\x64\xa9\xe6\x6d\xc6\xbb\x19\xd5\x96\x18\x8d\x77\x33\xaa\x3a\x83\x59\x65\x14\x8b\x77\xa3\xbb\xd8\xc4\x76\xeb\xfd\x84\x53\xc0\x98\x14\x90\xd9\x0d\x69\x19\xae\x1c\x95\x0b\x40\x3f\x08\x4b\x41\x78\xd8\xc7\xc9\xa1\x0a\x49\xd5\x7e\x96\x22\x1a\x56\x8f\xdd\x77\xa9\x48\xe9\xf7\xfa\xe3\xfd\x1c\x61\xe1\x39\x55\xa6\x2f\x76\xf7\xb7\x20\x7b\x0b\x6e\x6a\x1c\x6d\xe8\xa4\xd7\x11\x1c\x1f\x9f\x95\x30\xa8\x9d\x9c\x54\xcf\x4b\xe8\x07\x8a\xa4\x58\x57\x24\xc7\x6f\x7c\xe9\xbc\x3f\x56\x63\x02\x29\x1e\x09\xaa\x92\x1f\x12\x3f\x24\xb5\x4a\xe9\x28\x40\x15\x73\x87\xaa\xd4\x65\x62\xdc\xa3\x2a\x2c\x11\xe9\xf7\x44\x94\x8f\xe9\x1b\x2f\xc5\xf7\x1c\xe8\xe7\xf4\xed\x21\x45\xa4\x43\xe4\x9a\xfa\xc4\xde\xf7\xa9\x98\x19\xeb\x1c\x44\xa4\xc1\x78\x90\xb1\x90\x81\x09\x57\x5a\x3c\xe3\x1b\x3b\x5f\x5e\xd1\x38\xb0\x6b\x25\xb9\x9d\x04\xeb\xc1\xff\x44\x4a\xc7\xd9\x9b\xa1\x8f\xdc\x37\x69\x70\x80\x12\x94\xc9\x94\x88\x86\x67\x2e\xc6\xdc\x1e\xcd\xc6\x55\xb3\x14\x03\xd0\x21\x55\x71\x12\x65\xcb\xe4\x81\x18\x61\x90\x24\x57\x5a\x0c\x93\x44\x95\x99\x92\xfe\x2d\x89\x79\x55\x03\xc6\x7e\xe5\x7c\x9b\x84\x39\x62\x9b\x3d\x84\x04\x9c\xc4\x90\x56\xd4\x6e\xff\x87\x83\x97\xcc\x14\xa6\x70\xed\x33\xd1\x25\x6c\xd9\x84\x6f\x40\x80\x4b\x3a\x54\xf6\xbc\xcf\x1f\x86\xc8\x93\x4b\x32\x0c\xd2\x57\xc5\xd0\x25\xfe\xb3\x31\xbb\xa9\x88\x92\x24\xc3\x8a\xf2\x4d\x89\x2c\xdd\x94\xb3\x5e\x54\x9f\x45\x97\xd8\x51\x4b\xa5\x95\xcc\xb3\x76\x47\xf3\x29\x50\xae\x34\x61\x0c\x4d\xea\xc5\x35\xfc\xcd\xee\xc4\x6e\x44\x99\xa6\x1c\x8a\x09\x8d\xe2\xa2\x3b\x4f\x7a\x89\x36\x95\xb2\xbb\x33\x67\x3b\x97\x6c\xbb\x92\xcb\xbe\x16\x39\x58\xec\x5e\xda\xd9\xae\xb6\x61\xc6\x9d\x71\x07\xb6\xae\x29\x41\x10\xe7\xe1\xa6\xb0\x79\x53\xc6\x93\x6b\xdc\xda\xd5\x53\x6d\x65\x3d\x96\x18\xc4\xd4\xa0\x55\x6f\xdf\xd8\xab\x82\x10\x19\x03\xe4\xa3\x37\x25\x99\x85\xce\xb5\xf5\x72\x79\x6a\x5f\x1f\x9e\xed\x2e\x98\x7b\xa1\x81\x30\x06\xf1\xaa\x6d\xcc\x1b\x0a\xa5\x68\x97\x21\x4c\x71\xb3\xbf\x71\xf4\xcd\xfe\x39\xc9\xac\xf3\xd6\x7b\x38\x3c\x3b\x3b\x39\x3f\xac\xe6\x45\x33\xc7\xd9\x53\xb6\x6a\xf6\x40\xad\xd1\x3a\x3b\xa9\x14\x16\xba\x3b\xe2\x6d\x0c\xc8\x7d\x11\x7b\xe6\xc2\xf1\xba\x23\xda\xa4\xcb\x6f\x43\x03\xc9\xd1\x69\x29\xfe\xb7\xbb\x0c\x8b\x8f\xa5\x8f\xa5\xcb\x22\x7c\x36\x29\x47\x17\xdd\xad\xdc\xe1\xec\x80\x7d\xd1\x19\xcc\xfb\x0d\xd7\xf3\x76\x54\x29\xd9\xff\xbe\x1b\x63\xa9\xb6\xc7\x0d\xae\xf2\xac\x52\xb2\xff\xce\x57\xf4\xdf\xec\x8d\xb9\xcd\xc7\xca\x97\x4c\xf8\xcf\xbb\x73\xe5\x8b\x48\x2a\x94\xe0\xe9\x69\xa6\xf1\x63\xb9\xf1\x3b\x62\x39\xfb\x7e\xe2\x01\x4a\x46\xdd\x61\x4f\x76\xfb\xdf\xc5\xd0\xac\x69\x5f\x32\xca\x9f\x29\xef\x43\x37\x99\xf0\x68\x39\x3e\x4a\xcf\x7c\xbc\x7c\x4c\x82\x5e\x7d\xee\xbc\xa4\x75\x75\x9f\xce\x77\x46\x0e\x94\xa1\x07\xff\x7d\x03\x07\xb4\x37\x8f\x4c\x31\xf4\xdf\x6c\x7c\x47\xb2\xc5\xdd\xe1\xf7\xf4\xc6\xb3\x66\xde\xbf\x82\xb6\x15\xc6\xbc\x91\x79\x97\x72\x7e\x1b\x59\x7c\xf9\xe5\xd7\x2f\xb3\xc3\x77\xd7\x29\x64\x6f\x05\xed\xf5\xd7\x01\x4e\x2e\x6c\x47\x8a\x05\x91\xe1\xf0\x7d\xc9\x21\x84\x0e\x51\x8e\xa9\x42\x38\x28\x36\x8a\x10\x48\x3a\x9a\x9d\xa4\xd9\xf7\x04\x44\x41\xa4\x22\xc2\xde\xaf\xca\xce\x36\x3b\x17\x53\xdb\x0c\x76\x5f\x98\xbd\xac\xa5\x1c\x46\xb5\x5a\xf9\xe8\x02\xec\x6c\x25\xf7\xe7\x50\x9e\x96\x60\xa4\xab\x95\x4a\xfc\xe7\x6f\xe6\x6f\xad\x66\xbf\x1e\x3b\xe8\xb9\xf9\x63\x6a\x86\xdf\x3e\x7b\xb3\x0f\xb5\x12\xdc\xa3\x36\x53\xd8\xdf\xc6\x9f\xed\x0f\xbd\x90\xf6\xf4\x35\xff\x84\x53\x55\x82\xa6\xd7\xf8\x07\xff\xbf\x12\x78\x8d\x87\x12\x5c\x4e\x45\x37\x4a\x28\xd7\x4e\x4e\x7d\xeb\xf3\x73\xba\x5e\xe8\x45\xdf\xa7\x8f\xb0\xcd\xd8\x71\x1f\xad\x4d\xca\xb4\x80\xf8\x28\xcd\x56\xde\xa4\x0b\xda\xf2\xf0\x96\x76\x43\xaa\x27\x7f\xbd\x6c\x3a\x9e\x0e\x3a\x76\xb4\xea\x54\x3a\xdf\x90\xad\x3d\xb4\xc1\x7b\x6a\xb5\x1e\x1e\xdb\xcd\xab\x0b\xf8\xe9\xa7\x9f\x7e\x4a\x4e\xbc\x80\xba\x7b\xff\x62\x23\x92\xd2\x98\x7b\x5c\x6b\x5b\xd5\x1a\x19\x0e\xb0\x08\x07\x8a\xf4\x50\x82\x1f\x0a\xea\xe3\xfb\x32\x98\xa2\xca\xee\x9b\x18\x14\x8b\xdc\xe9\x61\x7e\x33\x67\x3b\xf1\x14\x74\xa7\xa0\x23\xc9\x4d\x8c\xa1\x3c\xc0\x09\x54\x4f\x81\x72\x2d\xcc\x5f\x4b\x46\x01\x61\x4a\x2c\xb4\x16\xbc\xcb\xf7\x14\xa4\x1f\x2e\xac\x17\xdc\xaa\xdb\xc5\x6d\x84\xf5\xe8\xfa\x9c\x15\x2c\x79\xfc\xa0\x85\x49\x39\xac\xe6\x57\x25\xdf\xee\x01\xc5\x86\xf4\xf1\xf8\x7b\xb3\x97\x1f\xfc\x57\x58\x82\x42\xfe\x11\xcb\x86\xdb\x45\x4d\x78\x40\x64\x00\xcf\x38\x1d\x0b\x19\xa8\xdd\x25\xe4\xa1\x06\x47\x1e\xd2\xf4\x77\xee\x49\xc8\x71\x96\x4b\x21\x9f\x38\x9d\xc4\x4e\x52\xf9\x92\x0e\x35\xe4\x13\xca\x06\x55\xbe\xc8\xe7\x91\x2d\x94\x2c\x9f\x39\x7a\xff\x7e\xe7\xf2\xc5\xcc\x0c\xf6\xe5\x0c\x54\xdd\xd1\x48\x75\x19\xce\x5d\xc8\x54\x6a\xcb\x70\x47\x0e\x77\xb4\x0c\xe7\x5a\x2e\x2a\xc7\xcb\x70\xae\x20\xac\x2c\xe5\xe5\xd4\xe1\x4e\x97\xe1\x3e\x38\xdc\x87\x65\x38\x57\x9e\x56\xce\x56\x9b\xcf\xd2\x97\x4e\xfb\x0c\x77\x86\x22\xd8\x77\x6c\xb6\xaa\xad\x2b\x98\x51\x7d\x4b\xfb\x6a\xe1\x91\xd7\x7a\x89\xfc\xc2\x05\xc7\x5f\xbf\x25\xed\xb3\x13\x7c\x01\x21\xe1\xcb\x2f\xbe\xd3\xdd\xc0\xd0\xfe\xf5\x4b\xbe\x1a\xcc\x3c\x33\xdb\x57\x26\x8a\xc4\x0f\x5d\x33\xba\xd2\x44\x6a\x15\x5f\xc8\x56\x6b\x17\xb5\x8b\xca\x45\x11\x92\xde\xdb\x18\xfe\x25\x69\xa3\xfb\x52\x84\x03\xdf\xc5\x61\x36\x85\x6e\xd4\xef\x4f\x4b\x26\xa6\x4e\xa1\x8f\x1a\x7c\xc1\x7d\xa2\x91\xdb\x10\x99\xa4\x83\xb9\xac\x74\xfe\x64\x6e\xd7\x6b\xda\xed\xdc\x17\xeb\x01\x4e\x86\x8c\x50\x9e\xe9\x22\x78\xcd\xed\x2c\x17\xcb\x4a\xdd\x6a\xc5\xde\xf2\x2c\x78\xa6\x5a\x0c\xcd\x7a\x86\xa3\x18\x9a\xf5\x09\xc7\x31\x34\xeb\x0d\x4e\x62\x68\xd6\x0f\x9c\xc6\xd0\xac\x07\xf8\x10\x43\xcf\x32\xd0\xb3\x18\x7a\x9e\x81\x9e\xc7\xd0\x6a\x65\x61\x19\x09\xbc\xba\xb0\x90\x04\x9e\x5d\xe0\x51\xc2\x49\x75\x75\xa7\x42\xea\xf1\xe3\x86\xf6\x8e\xe6\x75\xfd\xe9\xae\xbd\xbb\x7e\x37\x6b\xf4\xde\xbb\xcd\x6b\x34\xa1\x9b\x53\x6a\xfd\xb1\x7e\x79\xdb\xb0\xf0\x0f\x67\xc5\x0c\xea\xe3\x63\xb3\xf9\xc9\x62\x4e\xab\x59\x4c\xfb\xe9\xf1\xd3\xad\x77\xe3\x70\xb5\x2c\xee\xb7\xdb\x66\xfb\xbe\xfe\xb9\xe9\xb9\x4e\xdf\xd3\xa3\x2c\xba\x59\xf7\xda\xcd\xa7\xc7\x87\x56\xd3\x1d\xd7\x2d\xd0\x7c\x7c\xf2\xbc\xdb\xfa\xbd\xc5\x55\x8e\xb3\xb8\xcb\xfa\x5d\x3b\x66\xf5\xec\x74\xad\x2a\xd2\x8f\x4e\xf7\xe9\xf5\xdf\x94\x6f\xcf\xbc\xaa\xfd\xa7\x59\x75\xf6\xd9\xf0\xa6\x0e\x55\xdb\x73\xb4\xbf\x85\xcf\x9b\x9a\x16\x76\x1f\x6a\xe2\x87\xae\x15\x2a\xbb\xc2\xcf\x64\x42\x07\xf4\x4f\x0c\x20\x48\x8d\x59\x38\x27\x8f\x18\x53\xbe\x44\xf7\xff\xb4\x58\xed\x84\x92\xb7\xd2\xfb\x0a\x9e\xf7\xc2\xb6\x35\x51\x53\x15\xda\x97\xd6\x49\xeb\xb2\xef\x08\x97\xe1\x77\x49\x35\x02\x81\xe2\xcf\x45\x20\x0a\x8a\x9d\xce\xd5\x6d\xf3\x3f\x9b\x9d\x4e\xee\x0a\x2f\xfb\x8e\x7b\x3d\xc7\x69\xa3\x78\xed\xcb\x6b\xf7\xd6\xd3\xa7\x03\xdb\xb9\xc5\x22\x4c\xee\xfb\x1f\x3f\x5e\xc6\xa5\xf4\x41\xf1\xe4\xe8\xf4\xec\x43\xe5\xbc\x1a\xb7\x0d\xea\xd4\xfb\xd0\x78\xc8\x38\xa4\x9a\xaa\xf0\xfd\xbc\x9d\xb0\xcb\x88\xff\x5c\x82\x62\xed\xe4\xc4\x01\x86\x91\x44\x90\x18\x94\xa0\x78\x7a\x52\x3b\xab\xa4\xa0\x7d\xa3\xbb\x12\x14\xab\xa7\x1f\xaa\xd5\xd3\x0c\xaa\xcb\x22\x9c\x65\x0a\xe6\xcf\xcb\x8f\x3f\xbc\xfc\xf8\xc3\xff\x07\x00\x00\xff\xff\x3e\xeb\x01\x15\xf8\x44\x00\x00")

func dataConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataConfigJson,
		"data/config.json",
	)
}

func dataConfigJson() (*asset, error) {
	bytes, err := dataConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/config.json", size: 17656, mode: os.FileMode(438), modTime: time.Unix(1720990798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/config.json": dataConfigJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"config.json": &bintree{dataConfigJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
