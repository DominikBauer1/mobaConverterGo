// Code generated for package config by go-bindata DO NOT EDIT. (@generated)
// sources:
// data/config.json
package config

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataConfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x3b\xfb\x6f\x22\x39\x93\xbf\xaf\xb4\xff\x43\x2d\xab\x11\x33\xfa\x08\x07\xe4\x31\x49\xbe\xbd\x3d\x11\x42\x26\xd1\x64\x12\x2e\x4d\x76\xf6\xf6\xd3\x1d\x63\xba\x0b\xda\x17\x63\xf7\xd9\x6e\x08\x3b\xca\xfd\xed\x27\xdb\xdd\xd0\x4d\xf3\x0a\x73\x8c\xf4\xad\x34\xa3\x40\xd9\xb8\x1e\x2e\xd7\xc3\x55\xfe\xfa\xe3\x0f\x00\xa5\xde\x08\x35\x29\x9d\x83\xfd\x06\x50\x1a\xa3\x54\x54\xf0\xd2\x39\x94\xea\xd5\x5a\xb5\x51\xaa\x24\x03\x7e\x48\xf8\x10\x83\xde\x24\x44\x3b\xda\xa8\x35\x8e\x0e\x6a\x27\x07\x8d\xe3\x92\x99\xf1\x62\xe7\x95\x14\x2a\xf3\xf3\xee\x34\x42\x95\x59\x55\xa9\x70\xfe\x0d\xa0\xa4\x47\x11\xf3\xb4\xa4\x7c\x68\x96\xfa\xfa\xb5\xea\xb9\xdf\xdd\x91\x11\xbe\xbc\xfc\xeb\xd7\xaf\x50\xbd\x15\x43\x11\x6b\x78\x79\xf9\xd9\x7c\xbb\xf1\x05\xbf\x8b\x47\x7d\x94\x29\xc4\x9b\x63\x82\x97\x97\x37\x06\xf4\x80\x23\xa1\xf1\x5a\x28\x9d\x42\x3a\x42\xce\x3e\x3f\x2a\x94\x9c\x8c\x66\xb3\x1f\xf9\x13\x17\x13\x9e\x7e\xfd\xbd\x5e\xbf\x12\x72\x42\x64\x40\xf9\x30\x05\xb6\xc4\x28\x92\x0e\x51\x0a\x6a\x3f\xa3\x1f\x6b\x6c\x89\xd1\x88\xf0\x20\x85\x7a\xde\xf5\x87\xcf\x06\xf3\x2d\x9d\x63\xb7\x40\x43\x42\x01\x68\x68\xc9\x02\x2f\xc5\x9d\xd0\xed\x67\xaa\x9b\x03\x8d\xf2\x56\x0c\x29\x5f\x40\x70\x29\xb8\xf6\x22\xf4\xe9\x60\xba\xc8\x88\x63\xbb\xcd\xc7\x54\x0a\x3e\x42\x3e\xe7\x5e\xd2\x31\xd1\xf8\x11\xa7\x1d\xa2\xc3\x3c\x55\xb3\xa1\x05\xda\x2e\xa4\x98\x28\x94\x59\xb1\x5e\x09\xc6\xc4\xc4\xf3\xae\xb3\xab\xfc\x81\x52\xcc\xf1\x88\xe7\x69\xf6\x17\x16\x90\xdb\x07\x03\xc8\x6e\x86\x05\x58\x3e\x53\x48\x33\x20\x91\xbe\x15\x3e\x61\xa8\x66\x98\x29\xc3\x84\x20\xaf\xd5\xb9\x1f\xa3\xf4\xae\xba\x9d\x25\xa3\x1d\x29\xb4\xf0\x05\x4b\x87\xec\x3a\x16\x47\x71\x9f\xd2\xb9\xbf\x39\x4d\x4f\x47\x3e\xe2\xb4\xfd\xec\x94\xbc\xc9\x86\x62\x46\x83\x61\xe3\x23\x5a\xf6\x66\xb0\x16\x8d\x42\x94\xb3\xaf\x97\x54\xf9\x82\x73\xf4\xf5\xcd\xa0\x19\xeb\xd0\x8b\x7d\x1f\x31\x50\x5d\x49\xc7\x94\x30\x36\x9d\x73\x8d\x03\x94\xc9\x8a\x06\x8b\xa4\x3a\x1c\xcd\xd6\x69\x6a\x8d\xa3\x48\x9b\x25\x1e\x15\xe5\x43\xcf\xbb\x6e\x0e\x33\xfb\xd9\x34\xfb\x60\x21\x39\x4d\xb5\xc7\xa1\x8b\x72\x44\x39\x61\x57\x62\x3e\xdf\x7c\xf6\xe8\x9f\xb3\x6d\xc9\xce\xb9\x10\x6c\x26\x94\xf6\x28\xd2\x33\x1a\x9b\x51\x84\x3c\xf8\x4c\x79\x20\x26\x2a\xbb\xe3\xe9\xaf\x5b\x21\x91\x0a\x33\x48\x24\x0e\xa5\x88\xe7\x32\xbe\x20\xfe\x53\x1e\xd2\x8a\xa5\x12\xb2\x25\x98\x90\x79\x50\x56\x69\xcc\xcf\x54\x44\x7c\xf4\x90\x07\xaa\xa5\x25\xbb\x9e\x6f\xe7\xf0\x3e\xd6\x51\xac\x33\x80\x2b\xc1\x02\x94\xcb\x08\xcc\x2e\x7a\x2b\xfc\xa7\x19\x9c\x6a\xb6\xea\xf4\x5b\xda\x3c\x3f\xc4\x51\x41\x5a\x0f\x62\xa2\x0a\x32\x10\x2c\x1e\x71\x95\x91\x81\x8f\x57\xf4\x19\x03\x33\xb9\x25\xd8\x6c\xc4\x9b\x72\x4d\x9e\xaf\xe9\x30\x64\x74\x18\xea\x8c\x69\xf1\x42\x31\x31\x9b\x60\x36\xa3\xa9\x2e\xa4\x19\xc6\x8c\x78\x94\x16\xa3\x4f\xc4\x97\x22\xcb\x4e\x16\x8c\xcf\xf3\xd3\x44\x94\xc6\x4b\x64\x64\x9a\xdd\xfa\xc2\x46\x71\xdd\xe4\x9a\x12\x46\x89\xca\x10\x62\xe0\xb7\x74\x48\x74\x2c\xad\x86\x3b\xeb\xaa\x89\xd4\x89\x89\xbd\xe1\x29\xd4\x1c\x26\xe4\x7a\x36\xcb\x91\xd3\x25\xfd\x74\x6b\x53\x6f\x01\x50\x22\x46\x59\x31\xe8\x89\x48\x53\xc1\x8d\x33\xf8\xc7\x7f\xba\xc1\x97\x8c\xbf\x98\x8f\xa6\xae\xc2\xd9\xfd\x9c\xb7\x08\x70\x40\x62\xa6\x7b\x63\xc2\x62\x34\x0e\x43\xcb\x18\x33\xa8\x14\xfa\x3a\xf1\x59\x17\x42\x3c\x8d\x88\x7c\x02\x85\xda\x48\x5b\x65\xa6\x85\xc8\x22\x33\xe7\x12\xb5\xdd\x46\x54\x30\x09\x51\x87\x28\x41\x0b\x08\xa8\x8a\x8c\x00\x09\x48\x4c\x4e\xb3\xb1\x0e\x23\x54\x8a\x0c\xd1\xcc\xe4\xc0\xc4\x70\x68\x24\x27\x62\x5d\xcd\x2c\x5c\x60\xc2\x42\x07\x84\x29\x4b\xed\xdf\xc1\xfc\xd0\x30\x55\xc9\x0c\x5b\x1e\xce\xa1\x54\x4a\x61\x2f\x89\x74\x52\x87\x3b\x77\x79\xeb\x85\x51\xaf\x9d\x2d\x97\xc5\x07\xe4\x28\x09\x5b\x22\x81\x6e\x88\x40\x7d\xc1\x81\x3b\x97\x2a\x06\xa0\x43\x84\xc4\x79\x57\xc1\x8c\x27\x78\x60\x20\x24\x78\xde\x35\x50\x05\xf5\xda\x59\xb5\xb4\x40\x65\xc6\x0d\xaf\x27\xb3\xf6\x5a\x22\x6f\x78\x40\x7d\xa2\x51\x65\x69\x03\x3d\x8d\xb0\x0a\x57\x09\x51\xf3\x8d\x52\x15\xa0\xba\xac\x80\xb0\x09\x99\x2a\x28\xd7\xca\x9b\x77\xc8\x45\x25\xa5\xda\xca\x2d\x98\x07\x14\xeb\x79\xcb\x60\x92\xf8\x3f\x31\x95\x18\x94\xce\xc1\xec\xf0\x72\x25\x25\x8a\xfa\x96\xfe\x35\x5a\x6a\xf6\x20\x14\x4a\x5b\x4f\x2f\x24\xdc\x74\x80\x04\x81\x09\x46\xd2\xed\x92\x96\xba\x64\x1d\x39\x46\x69\x36\x8e\x2a\x18\x50\x64\x01\xf8\x84\x73\xa1\xa1\x8f\x60\x7c\xca\xb4\xb0\x71\xc6\x1b\xaf\xe7\xaa\xd1\x58\x71\xc6\xb6\x25\x3f\x32\x0e\x3f\x51\x31\xa3\x46\x86\xe8\xfc\xae\xe5\x55\xcd\x8c\xd9\xdf\x50\x05\x8d\x46\x81\xe2\x34\xee\xd9\x7a\x2f\x76\xa1\x39\x4e\x83\xab\x15\x04\x2f\x12\x95\x0b\x1b\x77\xb5\x5a\xcd\x60\x4c\xb8\x8f\xc1\x26\x02\xdb\x9c\xf4\x19\xc2\xef\xf5\xba\x21\x2f\x41\xba\x59\xcf\x53\x53\x73\x50\xcf\x59\xa0\x99\x81\x5a\x7d\x00\x32\xf1\xef\x77\xe2\xcd\x9f\x63\xdc\x27\x63\xf9\x28\x7e\x17\x8d\xda\x96\xaf\x34\x00\xd5\x02\xd0\x21\x85\x38\x12\xd6\x97\x50\x5e\x85\xf2\xdf\xcb\x40\xb9\xd5\x34\x6d\x3c\xba\x3b\xbc\x54\x81\xc4\x88\x11\xb3\xfe\x84\xea\x10\xca\xbd\x5e\xa7\xfb\xdb\xcd\xc3\x87\x5e\x6f\x36\x3f\x41\x5a\x34\xc9\xd9\x5c\x64\x17\xd6\xee\x50\x4f\xc4\x7a\x1f\x6a\xb3\x06\x31\xb0\xcc\x0f\x89\xc6\x09\x99\x5a\x6b\xa5\xaa\xf0\x29\x66\x9a\x46\x6c\x6e\xbd\x14\x10\x69\xa8\x8d\x88\x24\x1a\x03\xe8\x4f\x2d\x3b\x37\x9d\x76\xaf\x57\x5e\x4e\x7d\x9a\x34\x7d\x47\xea\x8d\xe1\xc9\x52\x6f\xbf\xbf\x9e\xf2\x34\xb3\xfb\x8e\x94\xa7\x26\x2b\x4b\xfd\x0c\xf6\x2a\x0e\x56\xa7\xa1\xeb\xd9\x71\x07\xee\x9b\x8e\xc9\xf2\xa0\x0c\x9f\xa9\x06\x62\x88\xb1\x1a\x6f\xcf\x8c\x31\x11\xf6\x44\x99\x34\x61\x9f\x36\x62\x49\xca\xbd\xb3\x18\xb6\x09\x73\x32\x7c\x2b\x87\x16\xc8\x6c\x23\xab\x50\x3e\xa8\x97\xad\x4c\xac\xa1\xac\x98\x10\x07\xe8\x00\x48\x32\x99\xfa\x73\xdf\x45\x95\xf9\x1c\xec\x53\x38\x85\x4b\x87\xf5\xa2\xb9\xe1\x1a\x25\xf1\x35\x1d\x23\x78\x21\x32\xf6\x6d\xda\xe2\xb6\x85\x26\xb1\x61\x12\x08\xe1\x9c\x98\x2a\xbc\xbd\x13\x1a\xa6\x68\x0c\x2a\xa7\x2a\xc4\xe0\xdd\x46\x61\x14\x69\xcc\x87\xad\x26\x39\xf9\xfd\xb2\x6d\x63\xee\x95\x72\xc9\xdf\xb9\xec\xd3\xb1\xd8\xd4\x57\x0b\x2b\x81\xc8\x61\x85\x27\x9c\xc2\x80\x32\x5c\x61\x55\x73\x97\x3e\x7b\xb6\x50\x19\x92\xd4\x2c\x89\x48\x4c\x56\xd6\x52\xd9\xf1\x57\x9a\xd9\xcc\x25\xd5\x77\x0a\x4b\xcc\xac\x2b\xca\xf0\xa0\xef\x50\xef\xf3\x68\xe5\xee\xdb\xf6\x6e\x78\x1d\x36\x17\x7b\x1b\x8d\x4a\x82\x0b\xa3\x45\xf0\x1d\x98\x9d\xdd\x1d\xae\x67\xf4\x4e\xf0\x15\x7c\x6e\xa1\x92\xf6\x06\xc5\xaa\xa4\x78\x9e\x6e\x66\xc6\xe2\x2a\x1c\x7d\x4f\xf8\x4f\xea\xc8\x1d\xfe\x02\xfc\xd8\xe6\x4b\x39\xf8\xb5\xd6\x16\xf9\x61\x0e\xda\x45\xc6\xd1\x1c\xbd\xd2\x51\xde\xb0\x08\x9f\x58\x7b\x73\xbc\x5e\x52\xaf\xca\x45\x5f\x27\xa5\xeb\xb5\xc9\xa6\x95\x5d\x9a\x67\x16\x72\xc9\xf4\x7a\x77\xd3\x4d\xc5\xe9\x8a\x5b\x80\x2d\xc8\xeb\x64\x92\xc9\xad\x69\xb2\x21\xcc\xbe\x0c\x9d\x0d\x46\x0a\xf9\xe2\x5a\xa2\xb2\x97\xdc\x3b\x9f\xec\xf6\x73\x84\x52\x6f\x74\x91\xc8\x03\x60\x06\x15\x30\xc2\x87\x31\x19\xce\x32\x06\x95\xba\x8d\x94\xca\x3d\xda\xb2\xa5\x37\xf8\xeb\x59\xf7\xbc\xeb\x7f\x59\x7d\xde\xb7\xb5\x6b\x8f\x0a\xc1\x6b\x75\x40\x8c\x51\x82\x2d\x1b\x98\x1d\x9a\x9b\x35\x93\x39\xb9\x98\xca\x3a\xa7\x56\xc7\x45\x54\xa9\xa7\x12\x12\x0c\x0d\x55\x80\x9f\xbb\xf7\x97\xf7\xe7\xd0\x6a\xde\xb6\x36\x0a\xca\x6b\x75\x96\xc8\x69\xc6\xd0\xb6\xa2\x4a\x4b\x14\x7b\x37\xfe\xb3\xba\x49\x51\x36\xdb\xdf\x6f\x2e\xd8\x49\xb7\xbf\x8b\x56\xb2\xd5\x01\x2f\x42\x7b\x2f\xb6\x60\x28\xcd\xd0\x9d\x90\x23\x67\xff\x0e\x57\xca\xa7\x50\xd3\xd9\xd3\xb9\x4e\x13\x76\x23\x12\x77\x7e\x9c\xdf\x80\x07\xf4\xc5\x90\xd3\x3f\x51\x01\x35\xa1\x22\x27\x0c\xc6\x44\x52\x13\x20\x28\x78\x63\xd2\xdd\x0a\xbc\x31\x79\x63\x05\xde\x18\xbb\x60\xbe\x11\xa5\xaa\x50\x7e\x53\x06\x15\x8a\x98\x05\xd0\xc7\x25\x99\x7d\xfb\xa1\xd5\xbe\xeb\x9a\x60\x07\x8c\xda\xbe\x79\x03\x6f\x33\xd0\xcc\xc7\x77\xe6\xe4\xc6\x66\xca\xb2\xb0\x68\xa1\xb2\xb5\x5e\x3e\xcd\x58\x8b\x6f\xb2\x2f\x26\x60\x48\xd5\x27\xa9\x1a\x6f\x56\x1a\x8b\xb5\xa8\x33\xde\xf5\xb8\xb1\x44\x69\xbc\xeb\x71\xdd\x29\xcc\x2a\xa5\x58\xac\xda\xed\xa2\x13\xdb\xf1\xfb\x11\xa7\x80\x09\x2a\x20\xb3\xda\x5d\x15\x2e\x1d\x96\x73\x40\x3f\x08\x2b\x41\x78\x30\xc4\xe7\x03\x15\x92\xba\xfd\x2c\x45\x1c\xd5\x8f\xdc\x77\xa9\x48\xe5\x73\xf3\xe1\x6e\x3e\x60\xe1\x85\xad\xcc\x96\x1c\xf7\xc7\x90\xad\xcf\x9a\x84\x41\x1b\x3c\x59\x3e\x82\xa3\xa3\xd3\x0a\x06\x8d\xe3\xe3\xfa\x59\x05\xfd\x40\x91\x0c\xe9\x8a\x14\xe8\x4d\xca\xa1\xfb\x23\x35\x41\x90\xa1\x91\xa0\xaa\xf8\x21\xf1\x43\xd2\xa8\x55\x0e\x03\x54\x09\x75\xa8\x2a\x7d\x26\x26\x03\xaa\xc2\x0a\x91\xfe\x40\xc4\x45\x27\xbc\xb1\x5c\xbb\x67\xcf\x3c\xc7\x6f\xf3\xf7\x58\x87\xc8\x35\xf5\x89\xad\x37\xa9\x84\x18\x6b\x1c\x44\xac\xc1\x58\x90\x89\x90\x81\xf1\x48\x5a\x3c\xe1\x5e\xaf\x45\x57\x14\xa8\x77\x4d\xb2\xb6\x93\x47\x33\xf8\xef\x58\xe9\x24\x78\x32\xf8\x91\xfb\x26\x0a\x0d\x50\x82\x32\x81\x0a\xd1\xe0\x8a\xb5\x61\xa2\xb2\x0a\x06\x52\x8c\x40\x87\x54\x25\x31\x8c\xcd\x20\x47\x62\x8c\x41\x1a\xdb\x68\x11\xa5\x71\x22\x33\xd9\xee\xfe\x84\xb6\xaa\x6c\xbf\x5f\xa9\xdd\xa4\x2e\x88\xd8\x16\x01\x21\x01\x9f\x13\x48\x27\xee\x76\xff\xc3\xc1\x2b\x66\x09\x93\xd3\x0d\x99\xe8\x13\xb6\x6c\xc1\xff\x77\x71\x2c\xe9\x52\xd8\xf3\x89\xba\x8f\x90\xa7\x15\x11\x0c\xb2\x55\x41\xe8\x13\xff\xc9\xa8\xc4\x54\xc4\xa9\x3b\xb7\x82\xd9\xa3\x00\xb2\x6d\x16\xeb\x19\xff\x24\xfa\xc4\xce\x5a\xca\x7b\xba\xce\xda\xb3\xc3\xa7\x40\xb9\xd2\x84\x31\x34\x21\x0b\xd7\xf0\x37\xab\xf3\xfd\x98\x32\x4d\x39\x94\x53\x1c\xe5\x45\x33\x98\x76\x87\x6c\xca\xd9\x76\x27\xce\xf6\xa2\xd8\x06\x14\x17\xb5\x2c\x52\xb0\xd8\x8f\xb2\xb3\x96\x6c\x43\x8c\xbb\x36\x0d\x6c\xc8\x5f\x81\x80\xaa\xe4\x6b\xad\xbc\xcf\xb3\xb0\xd8\x4c\xb3\xab\x4d\xd8\x4a\x17\x2c\x32\x48\xb0\x41\xa7\xd9\xbd\xb6\x77\xc9\x21\x32\x06\xc8\xc7\xdf\x41\xe5\x93\x96\x93\xf5\x5c\x3e\x76\xaf\x0e\x4e\x77\x67\xf3\x4e\x68\x20\x8c\x41\xc2\x83\xb5\xfc\x91\x50\x8a\xf6\x19\xc2\x14\x37\x9f\x6c\x87\xdf\xe8\xf6\x71\x8e\xcf\x1b\xef\xfe\xe0\xf4\xf4\xf8\xec\xa0\x5e\x8c\x50\xe7\x63\xf6\xaa\xa7\x9e\xbf\xd5\x69\x75\x4e\x8f\x6b\xa5\x85\x92\x79\x72\xc4\x00\xb9\x2f\x12\x1b\x58\x3a\x5a\x77\xeb\x97\xf6\x51\x6d\xa8\xca\x1f\x9e\x54\x92\xff\xbb\xcb\xb0\xfc\x50\xf9\x50\xb9\x28\xc3\x27\xe3\x78\xfb\xe8\x4a\x2a\x07\xb3\x1b\xd8\xc5\x83\x3a\xef\xe8\x5a\x4f\xdb\x61\xad\x62\xff\x7d\x37\xc2\x32\x8d\x65\x1b\xcc\xd8\x69\xad\x62\xff\x9f\xad\x68\x6a\xd8\x1b\x71\x9b\xef\x36\x2f\x98\xf0\x9f\x76\xa7\xca\x17\xb1\x54\x28\xc1\xd3\x53\x86\x1b\x95\xdf\x21\x2b\xe8\xf7\x23\x0f\x50\x32\xea\xee\x28\xf2\xc7\xff\x36\x81\xe6\x55\xfb\x82\x51\xfe\x44\xf9\x10\xfa\xe9\x82\x87\xcb\xc7\xe3\xec\xca\x47\xcb\xe7\xa4\xc3\xab\x2f\x3f\x97\x34\x07\xee\xd3\x94\xce\xd0\x81\x32\xf8\xe0\xbf\xae\xe1\x2d\x1d\xcc\xbd\x46\x02\xfd\x37\xeb\x7b\x91\x6c\x51\x5c\xda\xdd\xb6\xce\x9a\x1f\xff\x7a\xee\x31\xd7\xc6\xb9\x4b\xfa\xb8\x0d\x67\x5f\x7e\xf9\xf5\xcb\xec\x76\xd6\xb5\x60\xd8\x92\x8e\xad\x76\xbc\xc5\xe7\x73\x5b\xea\xb7\x20\x12\x45\xef\x2a\x6e\x40\xe8\x10\xe5\x84\x2a\x84\xb7\xe5\x56\x19\x02\x49\xc7\xb3\x9b\x1b\xdb\x63\x4d\x14\xc4\x2a\x26\xec\xdd\xaa\xa8\x66\xf3\xc1\x37\xf1\xfa\x68\x77\xc6\x6c\xa5\x8d\x72\x18\x37\x1a\xd5\xc3\x73\xb0\xab\x55\xdc\x9f\x03\x79\x52\x81\xb1\xae\xd7\x6a\xc9\x9f\xbf\x99\xbf\x8d\x86\xfd\x7a\xe4\xa0\x67\xe6\x8f\x89\x9c\x7f\xfb\xe4\xcd\x3e\x34\x2a\x70\x87\xda\x2c\x61\x7f\x9b\x7c\xb6\x3f\xf4\x42\x3a\xd0\x57\xfc\x23\x4e\x55\x05\xda\x5e\xeb\x1f\xfc\x7f\x2b\xe0\xb5\xee\x2b\x70\x31\x15\xfd\x38\xc5\xdc\x38\x3e\xf1\xad\x3d\x2e\xec\xf5\x42\x27\xee\x3e\xcf\xaf\x6d\x3e\x4d\x1a\x07\x6d\xf8\xa3\x05\x24\x57\x37\x36\x37\x24\x7d\xd0\x96\x86\xfd\xe9\x76\xa6\xa3\x78\x3d\xa7\x3d\x4f\x07\x3d\x3b\x5b\xf5\x6a\xbd\x6f\x88\x8b\xee\xbb\xe0\x3d\x76\x3a\xf7\x0f\xdd\xf6\xe5\x39\xfc\xf4\xd3\x4f\x3f\xa5\xf7\x25\x40\x5d\x09\xb6\xdc\x8a\xa5\x34\xca\x9b\x64\x83\x76\xa3\x8c\x44\x46\x58\x86\xb7\x8a\x0c\x50\x82\x1f\x0a\xea\xe3\xbb\x2a\x98\xd4\xc2\x9e\x82\x04\x94\x08\xd0\x49\x75\x5e\x88\xb1\x0d\x4b\x0a\xfa\x53\xd0\xb1\xe4\xc6\x9a\x53\x1e\xe0\x33\xd4\x4f\x80\x72\x2d\xcc\x5f\x8b\x46\x01\x61\x4a\x2c\x54\x79\xdf\x14\xcb\xbb\xd9\xb6\xeb\xf5\x82\x5b\x55\x4c\xda\x46\x58\x0f\xae\x4d\x53\xc1\x92\xd6\x6d\x2d\x8c\x73\xb7\x3b\xbf\x2a\xcc\x75\xed\xdf\x1b\x02\xb5\xa3\xef\x4d\x5e\x71\xf2\x5f\xcf\x65\x14\x1b\xea\x37\x14\x93\x34\xe1\x01\x91\x01\x3c\xe1\x74\x22\x64\xa0\x76\xe7\xd7\x43\x0d\x0e\x3d\x64\xf1\xef\x5c\x50\x2e\x50\x56\x08\xbd\x1e\x39\x7d\x4e\x0c\x98\xf2\x25\x8d\x34\x14\x03\xb1\x16\x55\xbe\x28\xc6\x5f\x1d\x94\xac\x18\x71\x79\xff\x7e\xeb\xe2\xac\xdc\x0a\xb6\x8b\x1f\xea\x2e\xdd\xaf\x2f\x1b\x73\x97\xf3\xb5\xc6\xb2\xb1\x43\x37\x76\xb8\x6c\xcc\xd5\xcb\x6b\x47\xcb\xc6\x5c\x22\x55\x5b\x4a\xcb\x89\x1b\x3b\x59\x36\xf6\xde\x8d\xbd\x5f\x36\xe6\xd2\xba\xda\xe9\x6a\xf5\x59\xfa\xea\x62\x9f\xae\xc8\x60\x04\xfb\xda\xc6\x66\x83\x4d\x05\x33\xac\x7b\x74\x3e\xf9\xe7\x23\xeb\xf9\xfb\x85\x0b\x8e\xbf\x7e\x4b\x80\x65\x17\xf8\x02\x42\xc2\x97\x5f\x7c\xb7\x13\x23\x83\xfb\xd7\x2f\xc5\x9c\x28\xf7\x80\x65\x5f\x31\x1f\x12\x3f\x74\xfd\xb4\x4a\x13\xa9\x55\x52\x6a\xab\x37\xce\x1b\xe7\xb5\xf3\x32\xa4\xed\x83\x09\xfc\x4b\xda\x6d\xf4\xa5\x0c\x6f\x7d\xe7\x23\xd9\x14\xfa\xf1\x70\x38\xad\x18\x7f\x37\x85\x21\x6a\xf0\x05\xf7\x89\x46\x6e\xdd\x57\x1a\x78\x15\xe2\xbf\xf9\x63\x9c\x5d\x0b\x70\xdb\x19\x23\x36\x00\x7c\x8e\x18\xa1\x1c\x83\x1d\xeb\x6e\x5c\x2c\x4b\xf8\xea\x35\x7b\xe3\xbf\x60\x67\x1a\x09\x34\x7f\xce\x0f\x13\x68\xfe\x84\x1f\x25\xd0\xfc\xd9\x3e\x4e\xa0\xf9\x53\x7d\x92\x40\xf3\xe7\xf9\x7d\x02\x3d\xcd\x41\x4f\x13\xe8\x59\x0e\x7a\x96\x40\xeb\xb5\x05\x36\x52\x78\x7d\x81\x91\x14\x9e\x67\xf0\x30\xa5\xa4\xbe\xba\x06\x9d\x79\x56\xb5\x7e\x73\x2f\xdb\x57\xcd\xc7\xdb\xee\xee\xfb\xbb\x79\x47\xef\xbc\x9b\xe2\x8e\xa6\x78\x0b\x9b\xda\x7c\x68\x5e\xdc\xb4\x2c\xfc\xfd\x69\x39\x37\xf4\xe1\xa1\xdd\xfe\x68\x47\x4e\xea\xf9\x91\xee\xe3\xc3\xc7\x1b\xef\xda\x8d\x35\xf2\x63\xbf\xdd\xb4\xbb\x77\xcd\x4f\x6d\xcf\x35\x44\x9e\x1c\xe6\x87\xdb\x4d\xaf\xdb\x7e\x7c\xb8\xef\xb4\xdd\xa5\xd5\x02\xce\x87\x47\xcf\xbb\x69\xde\xd9\xb1\xda\x51\x7e\xec\xa2\x79\xdb\x4d\x48\x3d\x3d\x59\xbb\x15\xd9\xe7\x6c\xfb\xb4\xe1\x7b\xb4\xd4\xb9\xd7\x77\xff\xa4\x3c\xe4\x1f\x0b\x6e\x6a\xe4\xb3\x9d\x1e\xfb\x63\x63\xde\x4a\xb2\x70\x32\x50\x13\x3f\x74\x0d\x28\x79\x0e\x3f\x91\x67\x3a\xa2\x7f\x62\x00\x41\x66\xce\xc2\x4d\x6e\xcc\x98\xf2\x25\xba\xb7\xef\xab\x0d\x44\xfa\x42\x72\xbd\x10\xe0\x5b\x6e\xbf\x6d\x37\x09\x35\xe9\x94\x7d\x60\x99\x36\x6c\xfa\x0e\x73\x15\x3e\x4b\xaa\x11\x08\x94\x7f\x2e\x03\x51\x50\xee\xf5\x2e\x6f\xda\x7f\xb4\x7b\xbd\x42\x05\x28\xff\x7c\x73\x3d\xc9\x59\xad\x78\xed\x83\x4b\xf7\xc6\xcb\xa7\x23\xdb\x30\xc3\x62\x4c\x0b\xb3\x0f\x1f\x2e\x92\x1c\xf4\x6d\xf9\xf8\xf0\xe4\xf4\x7d\xed\xac\x9e\x34\x64\xe9\xcc\xbb\xb0\x64\xca\x24\xa4\x9a\xaa\xf0\xdd\xbc\x51\xab\xcf\x88\xff\x54\x81\x72\xe3\xf8\xd8\x01\xa2\x58\x22\x48\x0c\x2a\x50\x3e\x39\x6e\x9c\xd6\x32\xd0\xa1\xd9\xbc\x0a\x94\xeb\x27\xef\xeb\xf5\x93\xdc\x50\x9f\xc5\x58\x70\xe3\xf6\x51\xf4\x2e\xf1\x49\x5a\x98\x5d\x2a\x08\xaa\x12\x09\xd0\xd9\x53\x45\xfb\x3c\x6f\x11\xfb\x1f\x28\x45\xe9\xfc\xf5\xcf\x29\x5f\x8b\xdc\x24\x6b\x0b\xa8\x93\x97\xd1\x4b\xb0\xef\xc4\xf3\x23\x7f\x12\x13\x0e\x63\x22\x55\x8a\xc9\xfc\x79\xf9\xf1\x87\x97\x1f\x7f\xf8\xbf\x00\x00\x00\xff\xff\x89\xa4\x1b\x16\x84\x42\x00\x00")

func dataConfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataConfigJson,
		"data/config.json",
	)
}

func dataConfigJson() (*asset, error) {
	bytes, err := dataConfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/config.json", size: 17028, mode: os.FileMode(438), modTime: time.Unix(1721327179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/config.json": dataConfigJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"config.json": &bintree{dataConfigJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
